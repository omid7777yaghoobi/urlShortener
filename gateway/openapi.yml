openapi: 3.0.0
info:
  title: URL API
  description: API for managing URLs and authentication.
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /api/url:
    get:
      summary: Get list of URLs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of URLs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Url'
        '401':
          description: Unauthorized
    post:
      summary: Create a new URL
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Url'
      responses:
        '201':
          description: URL created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Url'
        '401':
          description: Unauthorized

  /api/url/{urlString}/metrics:
    get:
      summary: Get metrics for a URL
      security:
        - bearerAuth: []
      parameters:
        - name: urlString
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Metrics of the URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  metrics:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: URL not found

  /api/url/{urlString}/deactivate:
    post:
      summary: Deactivate a URL
      security:
        - bearerAuth: []
      parameters:
        - name: urlString
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: URL deactivated successfully
        '401':
          description: Unauthorized
        '404':
          description: URL not found

  /auth/signup:
    post:
      summary: Signup a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Signup successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Signup successful
        '400':
          description: Bad Request

  /auth/login:
    post:
      summary: Authenticate a user and return a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '401':
          description: Unauthorized
        '400':
          description: Bad Request

components:
  schemas:
    Url:
      type: object
      properties:
        id:
          type: string
        shortUrl:
          type: string
        originalUrl:
          type: string
        isActive:
          type: boolean

